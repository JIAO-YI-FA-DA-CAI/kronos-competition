# Configuration file for the Sphinx documentation builder.
#
# This file only contains a selection of the most common options. For a full
# list see the documentation:
# https://www.sphinx-doc.org/en/master/usage/configuration.html

# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
import os
import sys
sys.path.insert(0, os.path.abspath('../..'))
import recommonmark
from recommonmark.transform import AutoStructify

# -- Project information -----------------------------------------------------
import eventstudy as es 

project = 'Event Study'
copyright = f'2019, {es.__author__}, GNU General Public License v3 (GPLv3)'
author = es.__author__
display_version = True

# The full version, including alpha/beta/rc tags
release = es.__version__


# -- General configuration ---------------------------------------------------

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    "sphinx.ext.autodoc",
    "sphinx.ext.autosummary",
    "sphinx.ext.githubpages",
    "sphinx.ext.napoleon",
    "recommonmark",
    'sphinx_markdown_tables',
]

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
source_suffix = [".rst", ".md"]

# The master toctree document.
master_doc = "index"

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = None

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
with open(os.path.abspath("./exclude")) as exclude_file:
    exclude_patterns = [line.strip() for line in exclude_file.readlines()]


# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
#html_theme = "sphinx_rtd_theme"

import guzzle_sphinx_theme

html_theme_path = guzzle_sphinx_theme.html_theme_path()
html_theme = 'guzzle_sphinx_theme'

# Custom sidebar templates, maps document names to template names.
html_sidebars = {
    '**': ['logo-text.html', 'globaltoc.html', 'searchbox.html']
}

# Register the theme as an extension to generate a sitemap.xml
extensions.append("guzzle_sphinx_theme")

# Guzzle theme options (see theme.conf for more information)
html_theme_options = {
    # Set the name of the project to appear in the sidebar
    "project_nav_name": "Event Study",
}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']

html_css_files = [
    'css/custom.css',
]

html_favicon = '_static/favicon.ico'
# -- Options for LaTeX output ------------------------------------------------

latex_elements = {
    'fncychap': '',
    'fontpkg': r'''
    \usepackage{FiraSans}
    \setmainfont[ItalicFont={Fira Sans Light Italic},%
                 BoldFont={Fira Sans},%
                 BoldItalicFont={Fira Sans Italic}]%
                {Fira Sans Light}
    \setsansfont[ItalicFont={Fira Sans Light Italic},%
                 BoldFont={Fira Sans},%
                 BoldItalicFont={Fira Sans Italic}]%
                {Fira Sans Light}
    \setmonofont{Fira Mono}


    % Remove `chapter` from chapter's heading
    \makeatletter
    \def\@makechapterhead#1{%
    \vspace*{50\p@}%
    {\parindent \z@ \raggedright \normalfont
        \ifnum \c@secnumdepth >\m@ne
        \if@mainmatter
            %\huge\bfseries \@chapapp\space \thechapter
            \Huge\bfseries \thechapter.\space%
            %\par\nobreak
            %\vskip 20\p@
        \fi
        \fi
        \interlinepenalty\@M
        \Huge \bfseries #1\par\nobreak
        \vskip 40\p@
    }}
    \makeatother
    ''',
    'sphinxsetup': 'shadowsize=0pt, shadowrule=1pt',
    'maketitle': r'''
    \begin{{titlepage}}
    \flushright
    \includegraphics[width=10cm]{{../../source/_static/logo.pdf}}
    
    \vspace{{10em}}
    
    \Huge \textbf{{Documentation}}

    \Large version {}

    {}

    \today
    \end{{titlepage}}
    '''.format(es.__version__, es.__author__)
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (
        "latex",
        "eventstudy.tex",
        u"Event Study Package Documentation",
        es.__author__,
        "manual",
        False
    )
]

# -- Extension configuration -------------------------------------------------

autodoc_default_flags = ["members"]
autosummary_generate = True
html_copy_source = False
github_doc_root = "https://github.com/LemaireJean-Baptiste/EventStudy/tree/master/doc"

# At the bottom of conf.py
def setup(app):
    app.add_config_value('recommonmark_config', {
            'url_resolver': lambda url: github_doc_root + url,
            'auto_toc_tree_section': 'Contents',
            }, True)
    app.add_transform(AutoStructify)